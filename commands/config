#!/usr/bin/env bash
##########################################################################
# Copyright 2016 Vuid Pty Ltd 
# https://www.vuid.com
#
# This file is part of tredly-build.
#
# tredly-build is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# tredly-build is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tredly-build.  If not, see <http://www.gnu.org/licenses/>.
##########################################################################

# commands require running as root
cmn_assert_running_as_root

# Sanity checks - make sure packages we need are installed
check_for_zfs
check_for_ipfw

show_help "Available Commands:
    container
    ---------
    Description:
        Configures the default subnet for containers.

    Examples:
        $(basename "$0") config container subnet 10.1.0.0/24
    
    host
    ---------
    Description:
        Configures the Tredly host.
        
    Subcommands:
        network - configures the given interface with ip address and gateway

    Examples:
        $(basename "$0") config host network em0 192.168.150.20/24 192.168.156.254
        $(basename "$0") config host gateway 192.168.150.254
        $(basename "$0") config host hostname myhost
        
"

case "${_SUBCOMMANDS[0]}" in
    container)
        case "${_SUBCOMMANDS[1]}" in
            subnet)
                # check the number of args received
                if [[ ${#_SUBCOMMANDS[@]} -gt 3 ]]; then
                    exit_with_error "Too many arguments received."
                fi
                
                # update the subnet config data
                ip4_set_container_subnet "${_SUBCOMMANDS[2]}"
            ;;
            *)
                exit_with_error "Unknown config container command '${_SUBCOMMANDS[1]}'"
            ;;
        esac
    ;;
    host)
        case "${_SUBCOMMANDS[1]}" in
            gateway)
                # check the number of args received
                if [[ ${#_SUBCOMMANDS[@]} -gt 3 ]]; then
                    exit_with_error "Too many arguments received."
                fi
                
                # update the hosts gateway
                ip4_set_host_gateway "${_SUBCOMMANDS[2]}"
            ;;
            hostname)
                # check the number of args received
                if [[ ${#_SUBCOMMANDS[@]} -gt 3 ]]; then
                    exit_with_error "Too many arguments received."
                fi
                
                # update the hosts hostname
                ip4_set_host_hostname "${_SUBCOMMANDS[2]}"
            ;;
            network)
                # check the number of args received
                if [[ ${#_SUBCOMMANDS[@]} -gt 5 ]]; then
                    exit_with_error "Too many arguments received."
                fi
                if [[ ${#_SUBCOMMANDS[@]} -lt 5 ]]; then
                    exit_with_error "Too few arguments received."
                fi
                # update the network
                ip4_set_host_network "${_SUBCOMMANDS[2]}" "${_SUBCOMMANDS[3]}"
                # update the hosts gateway
                ip4_set_host_gateway "${_SUBCOMMANDS[4]}"
            ;;
            *)
                exit_with_error "Unknown config host command '${_SUBCOMMANDS[1]}'"
            ;;
        esac
    ;;
    *)
        exit_with_error "Unknown config command '${_SUBCOMMANDS[0]}'"
    ;;
esac
